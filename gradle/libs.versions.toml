[versions]
agp = "8.2.0"
kotlin = "1.9.20"
compose = "1.5.4"
compose-compiler = "1.5.4"
compose-material3 = "1.1.2"
androidx-activityCompose = "1.8.2"

dateTime = "0.4.0"
hilt = "2.48"
hilt-compiler = "1.1.0"
ktor = "2.3.5"
sqlDelight = "2.0.1"
coil = "2.4.0"
assertKVersion = "0.25"
turbineVersion = "0.7.0"
jUnitVersion = "4.13.2"
testRunnerVersion = "1.5.2"

[libraries]
#compose
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
compose-iconsExtended = { module = "androidx.compose.material:material-icons-extended", version.ref = "compose" }

#datetime
dateTime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "dateTime" }

#hilt
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-androidCompiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
hilt-compiler = { module = "androidx.hilt:hilt-compiler", version.ref = "hilt-compiler" }
hilt-navigation = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hilt-compiler" }

#KTOR
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serializationJson = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-ios = { module = "io.ktor:ktor-client-ios", version.ref = "ktor" }

#SQLDELIGHT
sqlDelight-runtime = { module = "app.cash.sqldelight:runtime", version.ref = "sqlDelight" }
sqlDelight-androidDriver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
sqlDelight-nativeDriver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }
sqlDelight-coroutinesExtensions = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }

#coil
coilCompose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }

#testing
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
assertK = { module = "com.willowtreeapps.assertk:assertk", version.ref = "assertKVersion" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbineVersion" }
jUnit = { module = "junit:junit", version.ref = "jUnitVersion" }
testRunner = { module = "androidx.test:runner", version.ref = "testRunnerVersion" }
composeTesting = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "compose" }
composeTestManifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "compose" }
hiltTesting = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }

[bundles]
compose = ["compose-material3", "compose-ui", "compose-ui-tooling-preview", "androidx-activity-compose", "compose-foundation", "compose-iconsExtended"]
ktorShared = ["ktor-core", "ktor-serialization", "ktor-serializationJson"]
sqlDlightShared = ["sqlDelight-coroutinesExtensions", "sqlDelight-runtime"]
testShared = ["assertK","turbine"]

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
sqlDelightGradlePlugin = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }
hiltGradlePlugin = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinCocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
